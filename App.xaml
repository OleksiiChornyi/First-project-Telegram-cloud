<Application x:Class="Telegram_cloud.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Telegram_cloud"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="CaptionButtonStyleDefault" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="LayoutRoot" Background="{Binding GridColor}" Width="46" Height="30">
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" 
                                   Foreground="{Binding ForeGroundColor}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="LayoutRoot" Property="Background" Value="#E5E5E5"/>
                                <Setter TargetName="txt" Property="Foreground" Value="#000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CaptionButtonStyleClose" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="LayoutRoot" Background="{Binding GridColor}" Width="46" Height="30">
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" 
                                   Foreground="{Binding ForeGroundColor}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="LayoutRoot" Property="Background" Value="#E81123"/>
                                <Setter TargetName="txt" Property="Foreground" Value="#FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyleDefault}">
            <Setter Property="Content" Value="&#xE949;"/>
        </Style>

        <Style x:Key="MaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyleDefault}">
            <Setter Property="Content" Value="&#xE739;"/>
        </Style>

        <Style x:Key="RestoreButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyleDefault}">
            <Setter Property="Content" Value="&#xE923;"/>
        </Style>

        <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyleClose}">
            <Setter Property="Content" Value="&#xE8BB;"/>
        </Style>

        <Style TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{Binding GridColor}"/>
        </Style>

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="{Binding MenuItemColor}"/>
            <Setter Property="Foreground" Value="{Binding ForeGroundColor}"/>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{Binding ButtonColor}"/>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{Binding TextBoxColor}"/>
            <Setter Property="Foreground" Value="{Binding ForeGroundColor}"/>
        </Style>

        <!--This changes buttons minimize, close and ...-->
        <!--<Style TargetType="{x:Type TextBlock}">
            <Setter Property="Background" Value="{Binding TextBoxColor}"/>
            <Setter Property="Foreground" Value="{Binding ForeGroundColor}"/>
        </Style>-->

        <Style TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{Binding GridColor}"/>
            <Setter Property="Foreground" Value="{Binding ForeGroundColor}"/>
        </Style>

        <!--
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Green"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                    Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                    To="#00FF00"
                                    Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Setter Property="Background" Value="#FF00FF" />
            </Trigger>
        </Style.Triggers>
        -->

        <!--RadioButton Style-->
        <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground" Value="{Binding ForeGroundColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid Margin="1,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="OuterEllipse" Width="15" Height="15" Fill="White" Stroke="Black" StrokeThickness="2"/>
                            <Ellipse x:Name="InnerEllipse" Width="7" Height="7" Fill="Black" Opacity="0"/>
                            <ContentPresenter Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="InnerEllipse" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="InnerEllipse" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
